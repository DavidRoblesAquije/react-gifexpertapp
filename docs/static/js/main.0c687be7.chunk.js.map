{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","reportWebVitals.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","myimages","GiftExpertApp","categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAG1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,mCACI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAG3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBU,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,e,+BCVlBK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVrB,kBAcbM,GAda,4CAAH,sDCERO,EAAe,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCoBDO,EAtBS,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECJyB,SAACA,GAG1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDhBmBK,CAAc1B,GAAhCO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAERO,EAAWpB,EAAKE,KAAI,SAAAC,GAAG,OACzB,cAAC,EAAD,eAEQA,GADCA,EAAIC,OAKjB,OACI,qCACI,oBAAIK,UAAU,wCAAd,SAAuDhB,IAEtDoB,EAAU,mBAAGJ,UAAU,mCAAb,wBAAiE,KAE5E,qBAAKA,UAAU,YAAf,SAA4BW,QElB3BC,EAAgB,WAEzB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAQA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ8C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,YCZxB8B,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAI1BX,M","file":"static/js/main.0c687be7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            //setcategories\r\n            setcategories(cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: Proptypes.func.isRequired\r\n}","export const getGifts = async (category) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=owKH0LCY9wWk5WINw9Qx7web3lXmrbH8`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ({title, url }) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInLeft'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n            {/* {img.title} */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport { getGift } from '../helpers/getGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifts(category);\r\n\r\n    const myimages = data.map(img => (\r\n        <GiftGridItem\r\n            key={img.id}\r\n            {...img}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeInLeft'>{category}</h3>\r\n\r\n            {loading ? <p className='animate__animated animate__flash'>Loading...</p> : null}\r\n\r\n            <div className='card-grid'>{myimages}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GiftGrid;\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifts = (category) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            })\r\n    }, [category])\r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GiftGrid from './components/GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['one punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setcategories(['otro anime', ...categories]);\r\n\r\n    //     setcategories( cats => [...categories, 'otra categoria'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2> GiftExpertApp</h2>\r\n            <AddCategory setcategories={setcategories} />\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GiftGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport '../node_modules/animate.css/animate.css'\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n\n//crear componente GifExpertApp"],"sourceRoot":""}